<!DOCTYPE html>
<html lang="pt-BR" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Redefinir Senha - HocketZap</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/css/intlTelInput.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/intlTelInput.min.js"></script>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        .glassmorphism {
            background: rgba(255, 255, 255, 0.25);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.18);
        }
        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-20px); }
            100% { transform: translateY(0px); }
        }
        .floating {
            animation: float 6s ease-in-out infinite;
        }
        .iti { width: 100%; }
    </style>
</head>
<body class="h-full flex items-center justify-center p-4">
    <div class="glassmorphism max-w-md w-full space-y-8 p-10 animate-fadeIn">
        <div class="text-center">
            <img src="/img/logo1.jpeg" alt="HocketZap Logo" class="mx-auto h-20 w-auto mb-4 floating">
            <h2 class="text-3xl font-extrabold text-white">
                Redefinir sua senha
            </h2>
            <p class="mt-2 text-sm text-white" id="stepDescription">
                Digite seu número de telefone para receber um código de verificação
            </p>
        </div>

        <form class="mt-8 space-y-6" id="resetForm">
            <div id="step1" class="space-y-4">
                <div>
                    <label for="phone" class="sr-only">Número de telefone</label>
                    <input id="phone" name="phone" type="tel" required class="appearance-none rounded-lg relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Número de telefone">
                </div>
                <button type="button" id="sendCodeButton" class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-300 ease-in-out transform hover:scale-105">
                    <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                        <i class="fas fa-paper-plane"></i>
                    </span>
                    Enviar código de verificação
                </button>
            </div>

            <div id="step2" class="space-y-4 hidden">
                <div class="flex items-center justify-center space-x-2">
                    <input type="text" maxlength="1" class="w-12 h-12 text-center text-2xl border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
                    <input type="text" maxlength="1" class="w-12 h-12 text-center text-2xl border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
                    <input type="text" maxlength="1" class="w-12 h-12 text-center text-2xl border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
                    <input type="text" maxlength="1" class="w-12 h-12 text-center text-2xl border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
                    <input type="text" maxlength="1" class="w-12 h-12 text-center text-2xl border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
                    <input type="text" maxlength="1" class="w-12 h-12 text-center text-2xl border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500" required>
                </div>
                <button type="button" id="verifyCodeButton" class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500 transition duration-300 ease-in-out transform hover:scale-105">
                    <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                        <i class="fas fa-check"></i>
                    </span>
                    Verificar código
                </button>
            </div>

            <div id="step3" class="space-y-4 hidden">
                <div class="bg-white p-4 rounded-lg shadow-md">
                    <h3 class="text-lg font-semibold text-gray-800 mb-2">Informações do Usuário</h3>
                    <p><strong>Nome:</strong> <span id="userName"></span></p>
                    <p><strong>Email:</strong> <span id="userEmail"></span></p>
                    <p><strong>Username:</strong> <span id="userUsername"></span></p>
                    <p><strong>Plano:</strong> <span id="userPlan"></span></p>
                </div>
                <div>
                    <label for="newPassword" class="sr-only">Nova senha</label>
                    <input id="newPassword" name="newPassword" type="password" required class="appearance-none rounded-lg relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Nova senha">
                </div>
                <div>
                    <label for="confirmPassword" class="sr-only">Confirmar nova senha</label>
                    <input id="confirmPassword" name="confirmPassword" type="password" required class="appearance-none rounded-lg relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm" placeholder="Confirmar nova senha">
                </div>
                <button type="button" id="resetPasswordButton" class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition duration-300 ease-in-out transform hover:scale-105">
                    <span class="absolute left-0 inset-y-0 flex items-center pl-3">
                        <i class="fas fa-key"></i>
                    </span>
                    Redefinir senha
                </button>
            </div>
        </form>
    </div>

    <script>
        const step1 = document.getElementById('step1');
        const step2 = document.getElementById('step2');
        const step3 = document.getElementById('step3');
        const stepDescription = document.getElementById('stepDescription');

        const sendCodeButton = document.getElementById('sendCodeButton');
        const verifyCodeButton = document.getElementById('verifyCodeButton');
        const resetPasswordButton = document.getElementById('resetPasswordButton');

        let iti;

        document.addEventListener('DOMContentLoaded', function() {
    const phoneInput = document.querySelector("#phone");
    iti = window.intlTelInput(phoneInput, {
        utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js",
        preferredCountries: ['br', 'us', 'gb', 'pt'],
        separateDialCode: true,
    });

    // Resto da inicialização...
});


        const codeInputs = document.querySelectorAll('#step2 input[type="text"]');
        codeInputs.forEach((input, index) => {
            input.addEventListener('input', (e) => {
                if (e.target.value.length === 1) {
                    if (index < codeInputs.length - 1) {
                        codeInputs[index + 1].focus();
                    }
                }
            });
            input.addEventListener('keydown', (e) => {
                if (e.key === 'Backspace' && e.target.value.length === 0 && index > 0) {
                    codeInputs[index - 1].focus();
                }
            });
        });

        
        sendCodeButton.addEventListener('click', () => {
    const phoneNumber = iti.getNumber(); // Isso retorna o número completo com o DDI
    
    if (!iti.isValidNumber()) {
        Swal.fire('Erro', 'Por favor, insira um número de telefone válido.', 'error');
        return;
    }

    fetch('/send-verification-code', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ phone: phoneNumber }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Código Enviado',
                text: 'Verifique seu telefone para o código de verificação.',
                showConfirmButton: false,
                timer: 2000
            });
            step1.classList.add('hidden');
            step2.classList.remove('hidden');
            stepDescription.textContent = 'Digite o código de verificação enviado para o seu telefone';
        } else {
            Swal.fire('Erro', data.message, 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        Swal.fire('Erro', 'Ocorreu um erro ao enviar o código de verificação.', 'error');
    });
});

    verifyCodeButton.addEventListener('click', () => {
        const phoneNumber = iti.getNumber(); // Use o número completo aqui também
    const code = Array.from(codeInputs).map(input => input.value).join('');
        fetch('/verify-code', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ phone: phoneNumber, code }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Código Verificado',
                    text: 'Código verificado com sucesso.',
                    showConfirmButton: false,
                    timer: 2000
                });
                step2.classList.add('hidden');
                step3.classList.remove('hidden');
                stepDescription.textContent = 'Defina sua nova senha';

                document.getElementById('userName').textContent = data.userInfo.name;
                document.getElementById('userEmail').textContent = data.userInfo.email;
                document.getElementById('userUsername').textContent = data.userInfo.username;
                document.getElementById('userPlan').textContent = data.userInfo.plan;
            } else {
                Swal.fire('Erro', data.message, 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire('Erro', 'Ocorreu um erro ao verificar o código.', 'error');
        });
    });

    resetPasswordButton.addEventListener('click', () => {
        const phone = iti.getNumber(); // Use o número completo aqui também
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;

        if (newPassword !== confirmPassword) {
            Swal.fire('Erro', 'As senhas não coincidem.', 'error');
            return;
        }

        fetch('/reset-password', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ phone, newPassword }),
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Senha Redefinida',
                    text: 'Sua senha foi redefinida com sucesso.',
                    showConfirmButton: true,
                    confirmButtonText: 'Ir para o login',
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/login';
                    }
                });
            } else {
                Swal.fire('Erro', data.message, 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            Swal.fire('Erro', 'Ocorreu um erro ao redefinir a senha.', 'error');
        });
    });
</script>
</body>
</html>
